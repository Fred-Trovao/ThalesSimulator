<?xml version="1.0"?>
<doc>
<assembly>
<name>
ThalesKeyManager
</name>
</assembly>
<members>
<member name="T:ThalesKeyManager.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:ThalesKeyManager.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:ThalesKeyManager.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:ThalesKeyManager.CryptoKey">
 <summary>
 This class implements total storage for a key. It has the capability to:
 
 * Load a clear key.
 * Load a key encrypted under an LMK.
 
 Once the key is loaded and an appropriate LMK is defined, the class can
 provide the clear and encrypted key values. Encrypted key values are
 provided in ANSI and variant format. Finally, the class also provides
 the key check values.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ThalesKeyManager.CryptoKey.KeyType">
 <summary>
 Get/set the key type.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.#ctor(System.String)">
 <summary>
 Creates an instance of this class using a clear key.
 </summary>
 <param name="hexKey">Clear key value.</param>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.#ctor(System.String,ThalesKeyManager.KeyType)">
 <summary>
 Creates an instance of this class using an encrypted key.
 </summary>
 <param name="cryptHexKey">Encrypted key value.</param>
 <param name="keyType">Key type.</param>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetClearValue">
 <summary>
 Returns the clear key value as a hexadecimal key.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetClearKey">
 <summary>
 Returns the clear key.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetEncryptedValue">
 <summary>
 Returns the encrypted key value (ANSI format, without a starting character).
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetANSIValue">
 <summary>
 Returns the encrypted key value (ANSI format).
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetVariantValue">
 <summary>
 Returns the encrypted key value (variant format).
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetCheckValue">
 <summary>
 Calculates and returns the key check value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.IsOddParity">
 <summary>
 Returns true/false depending on whether the key has odd parity or not.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.DecryptUnderLMK(System.String)">
 <summary>
 Decrypts the key under the appropriate LMK and variant.
 </summary>
 <param name="cryptHexKey"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetLMKPair(ThalesKeyManager.KeyType)">
 <summary>
 Returns the appropriate LMK, given a key type.
 </summary>
 <param name="keyType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.CryptoKey.GetVariant(ThalesKeyManager.KeyType)">
 <summary>
 Returns the appropriate variant, given a key type.
 </summary>
 <param name="keyType"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ThalesKeyManager.KeyInfo">
 <summary>
 This class stores information about a key.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ThalesKeyManager.KeyInfo.KeyName">
 <summary>
 Get/set the key name.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ThalesKeyManager.KeyInfo.Key">
 <summary>
 Get/set the key value.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfo.#ctor(System.String,System.String,ThalesKeyManager.KeyType)">
 <summary>
 Creates an instance of this class.
 </summary>
 <param name="keyName">Key name.</param>
 <param name="clearKey">Clear key value.</param>
 <param name="keyType">Key type.</param>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfo.#ctor(System.String,ThalesKeyManager.CryptoKey)">
 <summary>
 Creates an instance of this class.
 </summary>
 <param name="keyName">Key name.</param>
 <param name="key">Instance of CryptoKey.</param>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfo.#ctor(System.String)">
 <summary>
 Creates an instance of this class by parsing a line read from a file.
 </summary>
 <param name="fileLine"></param>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfo.GetFileLine">
 <summary>
 Returns a line that represents this instance to be written to a file.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ThalesKeyManager.KeyInfos">
 <summary>
 Serves as a placeholder for all loaded keys.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfos.InfoList">
 <summary>
 Return list with keys.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfos.ReadFromFile(System.String)">
 <summary>
 Read all keys from a file.
 </summary>
 <param name="fileName">Full file name.</param>
 <remarks></remarks>
</member>
<member name="M:ThalesKeyManager.KeyInfos.WriteToFile(System.String)">
 <summary>
 Write all keys to a file.
 </summary>
 <param name="fileName">Full file name.</param>
 <remarks></remarks>
</member>
<member name="T:ThalesKeyManager.HexDisplayControl">
 <summary>
 This class implements a control that can pretty-display a hexadecimal key.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ThalesKeyManager.KeyControl">
 <summary>
 This class implements a control that displays all information
 of a key.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ThalesKeyManager.KeyType">
 <summary>
 Defines the possible key types.
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
